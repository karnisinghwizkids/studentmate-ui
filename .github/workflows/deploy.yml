



# name: CI/CD Pipeline with Security Scanning

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'

#       - name: Install dependencies
#         run: npm ci

#       - name: Create .env file with secrets
#         run: |
#           echo "VITE_GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env

#       - name: Build project
#         run: npm run build

#       - name: Check if build folder exists
#         run: |
#           if [ ! -d "dist" ]; then
#             echo "Error: Build directory 'dist/' does not exist! Deployment failed."
#             exit 1
#           fi

#       - name: Install Firebase CLI
#         run: npm install -g firebase-tools

#       - name: Write Firebase service account key to file
#         run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > service-account.json

#       - name: Deploy to Firebase
#         run: firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }} --non-interactive
#         env:
#           GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/service-account.json

#   codeql-analysis:
#     runs-on: ubuntu-latest
#     permissions:
#       actions: read
#       contents: read
#       security-events: write
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Initialize CodeQL
#         uses: github/codeql-action/init@v2
#         with:
#           languages: javascript

#       - name: Perform CodeQL Analysis
#         uses: github/codeql-action/analyze@v2

#   trivy-scan:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Run Trivy Vulnerability Scanner
#         uses: aquasecurity/trivy-action@master
#         with:
#           scan-type: fs
#           scan-ref: .

  
#   gitleaks-scan:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Run Gitleaks to detect secrets
#         uses: gitleaks/gitleaks-action@v2
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}













#Handles:

# Build and deploy to Firebase
# Depends on security checks and lint

name: Deploy to Firebase

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [dependency-check, lint]
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci

      - name: Create .env file
        run: |
          echo "VITE_GEMINI_API_KEY=$GEMINI_API_KEY" >> .env
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - run: npm run build

      - name: Check if build folder exists
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: Build directory 'dist/' does not exist! Deployment failed."
            exit 1
          fi

      - run: npm install -g firebase-tools

      - name: Create service account file
        run: |
          echo "$SERVICE_ACCOUNT" > service-account.json
        env:
          SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Deploy to Firebase
        run: firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }} --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/service-account.json
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Clean up
        if: always()
        run: |
          rm -f service-account.json .env


